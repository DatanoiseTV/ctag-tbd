#include <atomic>
#include "ctagSoundProcessor.hpp"
#include "mifx/reverb.h"

namespace CTAG {
    namespace SP {
        class ctagSoundProcessorMIVerb : public ctagSoundProcessor {
        public:
            virtual void Process(const ProcessData &);

            virtual ~ctagSoundProcessorMIVerb();

            ctagSoundProcessorMIVerb();

            virtual const char *GetCStrID() const;

        private:
            void setParamValueInternal(const string &id, const string &key, const int val) override;

            void loadPresetInternal() override;

// autogenerated code here
// sectionHpp
const string id = "MIVerb";
void setIsStereo(){isStereo = true;}
atomic<int32_t> time, cv_time;
atomic<int32_t> amount, cv_amount;
atomic<int32_t> in_gain, cv_in_gain;
atomic<int32_t> diffusion, cv_diffusion;
atomic<int32_t> lp, cv_lp;
atomic<int32_t> lfo1_f, cv_lfo1_f;
atomic<int32_t> lfo2_f, cv_lfo2_f;
// sectionHpp



            // private attributes could go here
            mifx::Reverb reverb;
            float *reverb_buffer;
        };
    }
}