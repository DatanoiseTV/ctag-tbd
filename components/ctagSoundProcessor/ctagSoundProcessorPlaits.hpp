#include <atomic>
#include "ctagSoundProcessor.hpp"
#include "plaits/dsp/voice.h"

namespace CTAG {
    namespace SP {
        class ctagSoundProcessorPlaits : public ctagSoundProcessor {
        public:
            virtual void Process(const ProcessData &);

            virtual ~ctagSoundProcessorPlaits();

            ctagSoundProcessorPlaits();

            virtual const char *GetCStrID() const;

        private:
            void setParamValueInternal(const string &id, const string &key, const int val) override;
            void loadPresetInternal() override;

// autogenerated code here
// sectionHpp
const string id = "Plaits";
void setIsStereo(){isStereo = true;}
atomic<int32_t> smodel, cv_smodel;
atomic<int32_t> trigger, trig_trigger;
atomic<int32_t> frequency, cv_frequency;
atomic<int32_t> level, cv_level;
atomic<int32_t> harmonics, cv_harmonics;
atomic<int32_t> timbre, cv_timbre;
atomic<int32_t> morph, cv_morph;
atomic<int32_t> lpg_color, cv_lpg_color;
atomic<int32_t> lpg_decay, cv_lpg_decay;
atomic<int32_t> mod_freq, cv_mod_freq;
atomic<int32_t> mod_timbre, cv_mod_timbre;
atomic<int32_t> mod_morph, cv_mod_morph;
// sectionHpp







            // private attributes could go here
            plaits::Voice voice;
            plaits::Patch patch = {};
            char *shared_buffer;
        };
    }
}